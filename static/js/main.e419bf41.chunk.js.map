{"version":3,"sources":["actions/actionsTypes.js","actions/activitiesActions.js","listener/storageListener.js","actions/weatherActions.js","containers/ForecastWeather/ForecastWeather.js","components/ActivityItem/ActivityItem.js","containers/ActivityList/ActivityList.js","actions/routerActions.js","containers/ActivityForm/ActivityForm.js","store/initialState.js","reducers/activitiesReducer.js","reducers/routerReducer.js","reducers/weatherReducer.js","reducers/rootReducer.js","middleware/routerMiddleware.js","middleware/activitiesMiddleware.js","store/configureStore.js","containers/App/App.js","index.js"],"names":["REPLACE","readActivities","activities","type","startStorageListener","store","event","key","newValue","dispatch","setWeatherText","weatherText","weatherEvery3hour","ForecastWeather","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","monthSelectionArray","renderMessage","weatherCell","map","w","index","react_default","a","createElement","time","alt","src","weather","icon","main","temp","id","inherits","createClass","value","today","Date","selectedMonth","getMonth","selectedDay","getDate","props","onSetMonth","onSetDay","onFindWeather","target","options","selectedIndex","month","getFullYear","monthNo","_this2","monthName","monthSelection","oneMonth","className","defaultValue","onChange","e","onChangeMonth","_this3","noOfdays","getNoOfDays","dateSelection","i","push","onChangeDate","_this4","renderMonthSelection","renderMonthDateSelection","name","onClick","onSeeWeather","Component","connect","state","setMonth","day","setDay","monthAndDay","request","Request","method","fetch","then","res","json","date","dateUnix","getTime","selectedDateWeatherData","count","list","forEach","weatherData","dt","localtime","dt_txt","substring","toLocaleString","mostFrequentlyWeather","maxWeatherFrequence","keys","weatherName","selectedDateWeather","Math","round","dayFormatter","Intl","DateTimeFormat","weekday","selectedDateInfoMessage","format","catch","findWeather","ActivityItem","item","ActivityList","onAddActivity","window","open","location","origin","pathname","onEditActivity","onReadActivities","allActivities","oneActivity","content","title","toString","components_ActivityItem_ActivityItem","renderList","replace","href","payload","ActivityForm","getDefaultValue","params","attribute","findIndex","activity","parseInt","M","Datepicker","init","match","onReadActivity","preventDefault","onDeleteActivity","handleDelete","_this$props","onSubmit","getTitle","getDes","htmlFor","placeholder","ref","input","rows","cols","renderDeleteBtn","containers_ActivityForm_ActivityForm","deleteActivity","description","undefined","editActivity","addActivity","readActivity","store_initialState","router","activitiesReducer","initialState","action","activityIndex","filter","routerReducer","weatherReducer","assign","rootReducer","combineReducers","routerMiddleware","history","next","activitiesMiddleware","activitiesString","localStorage","getItem","newId","JSON","parse","setItem","stringify","splice","configureStore","createStore","applyMiddleware","thunk","createBrowserHistory","basename","process","addEventListener","App","es","Router","Link","to","Switch","Route","exact","path","component","ReactDOM","render","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e419bf41.chunk.js","sourcesContent":["export const READ_ACTIVITIES = 'READ_ACTIVITIES';\nexport const READ_ACTIVITY = 'READ_ACTIVITY';\nexport const ADD_ACTIVITY = 'ADD_ACTIVITY';\nexport const EDIT_ACTIVITY = 'EDIT_ACTIVITY';\nexport const DELETE_ACTIVITY = 'DELETE_ACTIVITY';\nexport const REPLACE = 'ROUTER/REPLACE';\nexport const SET_MONTH = 'SET_MONTH';\nexport const SET_DAY = 'SET_DATE';\nexport const SET_WEATHER_TEXT = 'SET_WEATHER_TEXT';\nexport const GET_WEATHER = 'GET_WEATHER';\nexport const FETCH_DATA_PENDING = 'FETCH_DATA_PENDING';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_ERROR = 'FETCH_DATA_ERROR';\n\n\n\n","import {\n  ADD_ACTIVITY, EDIT_ACTIVITY, DELETE_ACTIVITY, READ_ACTIVITIES, READ_ACTIVITY\n} from './actionsTypes';\n\nexport const addActivity = (activity) => ({\n  type: ADD_ACTIVITY, activity\n});\nexport const editActivity = (id, activity) => ({\n  type: EDIT_ACTIVITY, id, activity\n});\nexport const deleteActivity = (id) => ({\n  type: DELETE_ACTIVITY, id\n});\nexport const readActivities = (activities) => ({\n  type: READ_ACTIVITIES, activities\n});\nexport const readActivity = (id, activity) => ({\n  type: READ_ACTIVITY, id , activity\n});\n","import { readActivities } from '../actions/activitiesActions';\n\nconst startStorageListener = (store) => (event) => {\n  if (event.key === 'activities' && event.newValue) {\n    store.dispatch(readActivities());\n  } else {\n    return null;\n  }\n};\n\nexport default startStorageListener;\n","import {\n  SET_MONTH, SET_DAY, SET_WEATHER_TEXT\n} from './actionsTypes';\n\nexport const setMonth = (month) => ({\n  type: SET_MONTH, month\n});\nexport const setDay = (day) => ({\n  type: SET_DAY, day\n});\nexport const setWeatherText = (weatherText, weatherEvery3hour) => ({\n  type: SET_WEATHER_TEXT, weatherText, weatherEvery3hour\n});\n\nexport const findWeather = (monthAndDay) => (dispatch) => {\n  const weatherIn5DaysUrl = `https://api.openweathermap.org/data/2.5/forecast?id=1880252&appid=c39f3947b671b234f7f5571b40977227&units=metric`;\n  const request = new Request(weatherIn5DaysUrl, { method: 'GET' });\n  const monthSelectionArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  return fetch(request)\n    .then((res) => res.json())\n    .then((weather) => {\n      const { selectedMonth, selectedDay } = monthAndDay;\n      const date = new Date((new Date()).getFullYear(), selectedMonth, selectedDay);\n      const dateUnix = date.getTime() / 1000;\n      const selectedDateWeatherData = {\n        temp: 0,\n        weather: {}\n      };\n      const weatherEvery3hour = [];\n      let count = 0;\n\n      // weather api returns weather data in every 3 hours\n      // daily temperature is the average of the temperature within one day\n      // daily weather is the most frequently weather within one day\n      weather.list.forEach((weatherData) => {\n        if (weatherData.dt >= dateUnix && weatherData.dt < dateUnix + 86400) {\n          // console.dir(weatherData);\n          selectedDateWeatherData.temp += weatherData.main.temp;\n          count += 1;\n          if (selectedDateWeatherData.weather[weatherData.weather[0].main]) {\n            selectedDateWeatherData.weather[weatherData.weather[0].main] += 1;\n          } else {\n            selectedDateWeatherData.weather[weatherData.weather[0].main] = 1;\n          }\n          const localtime = new Date(`${weatherData.dt_txt.substring(0, 10)}T${weatherData.dt_txt.substring(11, 20)}Z`);\n          weatherEvery3hour.push({\n            main: weatherData.main,\n            weather: weatherData.weather[0],\n            time: localtime.toLocaleString().substring(11, 20)\n          });\n        }\n      });\n      let mostFrequentlyWeather = null;\n      let maxWeatherFrequence = 0;\n      Object.keys(selectedDateWeatherData.weather).forEach((weatherName) => {\n        if (selectedDateWeatherData.weather[weatherName] > maxWeatherFrequence) {\n          maxWeatherFrequence = selectedDateWeatherData.weather[weatherName];\n          mostFrequentlyWeather = weatherName;\n        }\n      });\n      const selectedDateWeather = {\n        temp: selectedDateWeatherData.temp ? (`${Math.round(selectedDateWeatherData.temp / count * 100) / 100}°`) : 'Not Available',\n        weather: mostFrequentlyWeather || 'Not Available'\n      };\n\n      const dayFormatter = new Intl.DateTimeFormat('sg', { weekday: 'long' });\n      const selectedDateInfoMessage = `${monthSelectionArray[selectedMonth]} ${selectedDay} - ${dayFormatter.format(date)} (Weather: ${selectedDateWeather.weather}, Temperature: ${selectedDateWeather.temp})`;\n\n      dispatch(\n        setWeatherText(selectedDateInfoMessage, weatherEvery3hour)\n      );\n    })\n    .catch(()=>{\n      dispatch(\n        setWeatherText('Not Available',[])\n      );\n    });\n};\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min';\nimport './ForecastWeather.css';\nimport { findWeather, setMonth, setDay } from '../../actions/weatherActions';\n\nexport class ForecastWeather extends Component {\n\n  monthSelectionArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  componentDidMount() {\n    const today = new Date();\n    const selectedMonth = today.getMonth();\n    const selectedDay = today.getDate();\n    this.props.onSetMonth(today.getMonth());\n    this.props.onSetDay(today.getDate());\n    this.props.onFindWeather({\n      selectedDay, \n      selectedMonth\n    });\n  }\n\n  onChangeMonth(event) {\n    this.props.onSetMonth(event.target.options.selectedIndex);\n  }\n\n  onChangeDate(event) {\n    this.props.onSetDay(event.target.value);\n  }\n\n  onSeeWeather() {\n    this.props.onFindWeather({\n      selectedDay: this.props.weather.selectedDay, \n      selectedMonth: this.props.weather.selectedMonth\n    });\n  }\n\n\n  getNoOfDays(month){\n    const today = new Date();\n    return (new Date(today.getFullYear(), month + 1, 0)).getDate();\n  }\n\n  renderMonthSelection(monthNo) {\n    if(monthNo || 0 === monthNo){\n      const monthName = this.monthSelectionArray[monthNo];\n      const monthSelection = this.monthSelectionArray.map((oneMonth, index) => (\n        <option value={oneMonth} key={index}>{oneMonth}</option>\n      ));\n      return (\n        <select className=\"browser-default\" defaultValue={monthName} onChange={(e) => this.onChangeMonth(e)}>\n          {monthSelection}\n        </select>\n      );\n    }\n    \n  }\n\n  renderMonthDateSelection(selectedDay) {\n    if(+selectedDay > 0){\n      \n      const noOfdays = this.getNoOfDays(this.props.weather.selectedMonth);\n      const dateSelection = [];\n      for (let i = 1; i <= noOfdays; i += 1) {\n        dateSelection.push((<option value={i} key={i}>{i}</option>));\n      }\n      return (\n        <select className=\"browser-default\" defaultValue={ selectedDay > noOfdays? 1: selectedDay }  onChange={(e) => this.onChangeDate(e)}>\n          {dateSelection}\n        </select>\n      );\n    }\n  }\n\n  renderMessage = (weatherText, weatherEvery3hour) => {\n    if(!weatherEvery3hour || !weatherText) return;\n    const weatherCell = weatherEvery3hour.map((w, index) => \n      (<td key={index}>\n        <p>{w.time}</p>\n        <p><img alt=\"weather-chart\" src={`https://openweathermap.org/img/w/${w.weather.icon}.png`}/>{w.weather.main}</p>\n        <p>{w.main.temp}°C</p>\n      </td>));\n\n    return ( \n    <div id=\"message\">\n      <p>{weatherText}</p>\n      <table>\n        <tbody>\n        <tr>\n          {weatherCell}\n        </tr>\n        </tbody>\n        \n      </table>\n    </div>\n  )};\n\n\n  render() {\n    return (\n      <div>\n        <h3 className=\"title-area\">Forecast Weather</h3>\n        <div className=\"content-area\">\n          <div className=\"search\">\n            <div className=\"search-group\">\n              <h5>Month</h5>\n              {this.renderMonthSelection(this.props.weather.selectedMonth)}\n            </div>\n            <div className=\"search-group\">\n              <h5>day</h5>\n              {this.renderMonthDateSelection(this.props.weather.selectedDay)}\n            </div>\n            <div className=\"search-group\">\n              <button className=\"btn indigo waves-effect waves-light lighten-1\" type=\"submit\" name=\"submit\" onClick={(e) => this.onSeeWeather(e)}>check weather</button>\n            </div>\n          </div>\n          <div className=\"search-date\">\n            { this.renderMessage(this.props.weather.weatherText, this.props.weather.weatherEvery3hour)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => (\n  {\n    weather: state.weather\n  }\n);\nconst mapDispatchToProps = (dispatch) => ({\n  onSetMonth: (month) => {\n    dispatch(setMonth(month));\n  },\n  onSetDay: (day) => {\n    dispatch(setDay(day));\n  },\n  onFindWeather: (monthAndDay) => {\n    dispatch(findWeather(monthAndDay));\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ForecastWeather);\nexport { mapDispatchToProps };\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ActivityItem = (props) => {\n  return (\n    <div>\n      {props.item}\n    </div>\n  );\n};\nActivityItem.propTypes = {\n  item: PropTypes.any\n};\nexport default ActivityItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ActivityItem from '../../components/ActivityItem';\nimport { readActivities } from '../../actions/activitiesActions';\nimport './ActivityList.css';\nexport class ActivityList extends Component {\n  constructor() {\n    super();\n    this.onAddActivity = () => {\n      window.open(`${window.location.origin}${window.location.pathname}/new`, '_blank');\n    }\n    this.onEditActivity = (id) => {\n      window.open(`${window.location.origin}${window.location.pathname}/${id}`, '_blank');\n    }\n  }\n  componentDidMount(){\n    this.props.onReadActivities();\n  }\n\n  renderList(activities) {\n    if ( activities && activities.length > 0) {\n      const allActivities = activities.map((oneActivity) => {\n        const content = (\n          <div className=\"message collection col s12 m6\">\n            <span className=\"title collection-item\">title:{oneActivity.title}</span>\n            <span className=\"dateInfo collection-item\">date:{oneActivity.date.toString()}</span>\n          </div>\n        );\n        return (\n          <div key={oneActivity.id} onClick={() => this.onEditActivity(oneActivity.id)}>\n            <ActivityItem item={content} />\n          </div>\n        );\n      });\n      return (<div>{allActivities}</div>);\n    }\n    return (\n      <p>No Activities.</p>\n    );\n  }\n\n  render() {\n    const { activities } = this.props;\n    this.activities = activities;\n    return (\n      <div>\n        <h3>ActivityList</h3>\n        {this.renderList(this.activities)}\n        <button type=\"submit\" onClick={()=>this.onAddActivity()}>Add</button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => (\n  {\n    activities: state.activities\n  }\n);\nconst mapDispatchToProps = (dispatch) => ({\n  onReadActivities: () => {\n    dispatch(readActivities());\n  }\n\n});\nActivityList.propTypes = {\n  activities: PropTypes.array\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ActivityList);\n","import { REPLACE } from './actionsTypes';\n\nexport const replace = (href) => ({\n  type: REPLACE,\n  payload: href\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min';\nimport M from 'materialize-css';\nimport { addActivity, deleteActivity, editActivity, readActivity } from '../../actions/activitiesActions';\nimport { replace } from '../../actions/routerActions';\n\nexport class ActivityForm extends Component {\n  constructor(){\n    super();\n  \n    this.getDefaultValue = (params, activities, attribute) => {\n      if (params && params.id) {\n        const index = activities.findIndex((activity) => activity.id === parseInt(params.id, 10));\n        if (index !== -1 && activities[index][attribute]) {\n          return activities[index][attribute];\n        }\n      }\n      return null;\n    }\n  }\n  componentDidMount() {\n    M.Datepicker.init(this.getDate);\n    if(this.props.match.params && this.props.match.params.id){\n      this.props.onReadActivity(parseInt(this.props.match.params.id),10);\n    }\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n    this.props.onDeleteActivity(parseInt(this.match.params.id, 10));\n  }\n\n  renderDeleteBtn(params) {\n    if (params && params.id) {\n      return (\n        <button type=\"delete\" onClick={(e) => this.handleDelete(e)}>Delete</button>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { activities, dispatch, match } = this.props;\n    this.activities = activities;\n    this.dispatch = dispatch;\n    this.match = match;\n    return (\n      <div>\n        <h1>Activity</h1>\n        <form onSubmit={(e) => this.props.onSubmit(e, this.match.params,this.getTitle.value,this.getDes.value,this.getDate.value)}>\n          <label id=\"title\" htmlFor=\"title\">\n            Title\n            <input type=\"text\" id=\"titleInput\"  placeholder=\"Title\" ref={ (input) => {this.getTitle = input} } defaultValue={this.getDefaultValue(this.match.params, this.activities, 'title')} />\n          </label>\n          <label id=\"desc\" htmlFor=\"desc\">\n            Description\n            <input type=\"text\" rows=\"5\" cols=\"28\" placeholder=\"Description\" ref={ (input) => {this.getDes = input} } defaultValue={this.getDefaultValue(this.match.params, this.activities, 'description')} />\n          </label>\n          <label id=\"date\" htmlFor=\"date\">\n            Date\n            <input className='datepicker' ref={ (input) => {this.getDate = input} } type=\"text\" placeholder=\"Date\"  defaultValue={this.getDefaultValue(this.props.match.params,this.activities,'date') }/>\n          </label>\n          {this.renderDeleteBtn(this.match.params)}\n          <button type=\"submit\">Confirm</button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  activities: state.activities,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteActivity: (id) => {\n    dispatch(deleteActivity(parseInt(id, 10)));\n    dispatch(replace('/activity'));\n  },\n  onSubmit: (e, params, title, description, date) => {\n    if (e !== undefined && e.preventDefault) e.preventDefault();\n    const activity = {\n      title,\n      description,\n      date\n    };\n    if (params && params.id) {\n      activity.id = parseInt(params.id, 10);\n      dispatch(editActivity(activity.id, activity));\n      dispatch(replace('/activity'));\n    } else {\n      dispatch(addActivity(activity));\n      dispatch(replace('/activity'));\n    }\n  },\n  onReadActivity: (id) => {\n    dispatch(readActivity(id));\n  }\n});\nActivityForm.propTypes = {\n  activities: PropTypes.array,\n  onDeleteActivity: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onReadActivity: PropTypes.func,\n  match: PropTypes.object,\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(ActivityForm);\nexport { mapDispatchToProps };\n","export default {\n  activities: [],\n  router: {\n    pathname: '/'\n  },\n  weather:{\n    selectedMonth: null,\n    selectedDay: null,\n    weatherText: \"\",\n    weatherEvery3hour: []\n  }\n};\n","import initialState from '../store/initialState';\nimport {\n  ADD_ACTIVITY, EDIT_ACTIVITY, DELETE_ACTIVITY, READ_ACTIVITIES, READ_ACTIVITY\n} from '../actions/actionsTypes';\n\nconst activitiesReducer = (state = initialState.activities, action) => {\n  switch (action.type) {\n    case ADD_ACTIVITY:\n      return state.concat([action.activity]);\n    case EDIT_ACTIVITY:\n      const activityIndex = state.findIndex((activity) => activity.id === action.id);\n      state[activityIndex] = action.activity;\n      return state;\n    case DELETE_ACTIVITY:\n      return state.filter((activity) => activity.id !== action.id);\n    case READ_ACTIVITIES:\n      state = action.activities;\n      return state;\n    case READ_ACTIVITY:\n      state = [action.activity];\n      return state;\n    default:\n      return state;\n  }\n};\nexport default activitiesReducer;\n","import initialState from '../store/initialState';\nimport {REPLACE} from '../actions/actionsTypes';\n\nconst routerReducer = (state = initialState.router, action) => {\n  switch (action.type) {\n    case REPLACE:\n      state.pathname = action.payload\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default routerReducer;\n","import initialState from '../store/initialState';\nimport {\n  SET_MONTH, SET_DAY, SET_WEATHER_TEXT\n} from '../actions/actionsTypes';\n\nconst weatherReducer = (state = initialState.weather, action) => {\n    switch (action.type) {\n      case SET_MONTH:\n        return Object.assign({}, state, { \n            selectedMonth: action.month \n        });\n      case SET_DAY:\n        return  Object.assign({}, state, { \n            selectedDay: action.day \n        });\n      case SET_WEATHER_TEXT:\n        return Object.assign({}, state, { \n          weatherText: action.weatherText,\n          weatherEvery3hour: action.weatherEvery3hour\n      });\n      default:\n        return state;\n    }\n  };\n  export default weatherReducer;\n","import { combineReducers } from 'redux';\nimport activities from './activitiesReducer';\nimport router from './routerReducer';\nimport weather from './weatherReducer';\n\nconst rootReducer = combineReducers({\n  activities,\n  router,\n  weather\n});\n\nexport default rootReducer;\n","\nimport { REPLACE } from '../actions/actionsTypes';\n\nconst routerMiddleware = (history) => () => (next) => (action) => {\n  switch (action.type) {\n    case REPLACE:\n      history.replace(action.payload);\n      return next(action);\n    default:\n      return next(action);\n  }\n};\nexport default routerMiddleware;\n","import {\n  ADD_ACTIVITY, EDIT_ACTIVITY, DELETE_ACTIVITY, READ_ACTIVITIES, READ_ACTIVITY\n} from '../actions/actionsTypes';\n\nconst activitiesMiddleware = () => (next) => (action) => {\n  const activitiesString = localStorage.getItem('activities');\n  let activities = null;\n  let newId = 1;\n  switch (action.type) {\n    case ADD_ACTIVITY:\n      if (activitiesString) {\n        activities = JSON.parse(activitiesString);\n        newId = activities.length + 1;\n      }\n      action.activity.id = (new Date()).getTime();\n      if (newId === 1) {\n        localStorage.setItem('activities', JSON.stringify([action.activity]));\n      } else {\n        activities.push(action.activity);\n        localStorage.setItem('activities', JSON.stringify(activities));\n      }\n      return next(action);\n    case EDIT_ACTIVITY:\n      if (activitiesString) {\n        activities = JSON.parse(activitiesString);\n      }\n      if (activities) {\n        const activityIndex = activities.findIndex((activity) => activity.id === action.id);\n        if (activityIndex !== -1) {\n          activities[activityIndex] = action.activity;\n          localStorage.setItem('activities', JSON.stringify(activities));\n        }\n      }\n      return next(action);\n    case DELETE_ACTIVITY:\n      if (activitiesString) {\n        activities = JSON.parse(activitiesString);\n      }\n      if (activities) {\n        const activityIndex = activities.findIndex((activity) => activity.id === action.id);\n        if (activityIndex !== -1) {\n          activities.splice(activityIndex,1);\n          localStorage.setItem('activities', JSON.stringify(activities));\n        }\n      }\n      return next(action);\n    case READ_ACTIVITIES:\n      if (activitiesString) {\n        activities = JSON.parse(activitiesString);\n      }\n      if (!activities) {\n        activities = [];\n      }\n      action.activities = activities;\n      return next(action);\n    case READ_ACTIVITY:\n      if (activitiesString) {\n        activities = JSON.parse(activitiesString);\n      }\n      action.activity = null;\n      if (activities) {\n        const index = activities.findIndex((activity) => activity.id === action.id);\n        if (index !== -1) {\n          action.activity = activities[index];\n        }\n      }\n      return next(action);\n    default:\n      return next(action);\n  }\n};\nexport default activitiesMiddleware;\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport routerMiddleware from '../middleware/routerMiddleware';\nimport activitiesMiddleware from '../middleware/activitiesMiddleware';\nimport thunk from 'redux-thunk';\n\nconst configureStore = (initialState, history) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(routerMiddleware(history), thunk, activitiesMiddleware)\n  )\n  return store\n};\nexport default configureStore;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  Router, Route, Link, Switch\n} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min';\nimport startStorageListener from '../../listener/storageListener';\nimport ForecastWeather from '../ForecastWeather';\nimport ActivityList from '../ActivityList';\nimport ActivityForm from '../ActivityForm';\nimport initialState from '../../store/initialState';\nimport configureStore from '../../store/configureStore';\nconst history = createBrowserHistory({basename:process.env.PUBLIC_URL});\nconst store = configureStore(initialState, history);\n\n// sync localstorage across tabs\nif (window.addEventListener) {\n  window.addEventListener('storage', startStorageListener(store));\n}\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <div>\n        <Router history={history}>\n          <div>\n            <nav className=\"nav-bar indigo lighten-1\">\n              <div className=\"nav-wrapper\">\n              <ul id=\"nav-mobile\" className=\"left\">\n                  <li><Link to={'/weather'}>ForecastWeather</Link></li>\n                  <li><Link to={'/activity'}>Activity</Link></li>\n              </ul>\n              </div>\n            </nav>\n            <Switch>\n              <Route exact path={'/'} component={ForecastWeather} />\n              <Route exact path={'/weather'} component={ForecastWeather} />\n              <Route exact path={'/activity'} component={ActivityList} />\n              <Route exact path={'/activity/new'} component={ActivityForm} />\n              <Route exact path={'/activity/:id'} component={ActivityForm} />\n              <Route component={ForecastWeather} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    </div>\n  </Provider>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n// import ForecastWeather from './ForecastWeather/ForecastWeather'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}